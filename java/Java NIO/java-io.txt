1、基于字节操作的I/O InputStream和 OutputStream
	用volatile修饰的变量，线程在每次使用变量的时候，都会读取变量修改后的最的值

===========
java NIO
===========
I/O缓冲区操作
-----------
当内核通知磁盘控制器从磁盘读取文件（此时不依赖CPU），等待内核缓冲区中写满内容后将内容写到用户空间中的缓冲区

Tips
	内核空间的告诉缓存机制
	磁盘 块存储设配 是固定大小的数据块 ，而用户进程请求可能是任意大小的或非对齐的数据块

直接缓冲区是直接与通道和I/O例程进行通信的

“我们应该忘记小的效率，应为97%的情况下：过早的优化是所有祸害的根源。” ——唐纳德●克努特

============
关于泛型的一些共存问题
============
Tips 
	Java代码中的方法特征签名只包括了方法名称、参数顺序和参数类型，并不包括方法的返回值，因此方法的返回值并不参与重载方法的选择，这样看来为重载方法加入返回值貌似是多余的。对于重载方法的选择来说，这确实是多余的，但我们现在要解决的问题是让上述代码能通过编译，让两个重载方法能够合理地共存于同一个Class文件之中，这就要看字节码的方法特征签名，它不仅包括了Java代码中方法特征签名中所包含的那些信息，还包括方法返回值及受查异常表。为两个重载方法加入不同的返回值后，因为有了不同的字节码特征签名，它们便可以共存于一个Class文件之中
